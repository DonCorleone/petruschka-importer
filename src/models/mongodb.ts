// Interface for MongoDB document structure

export interface EventDocument {
  _id: number;
  defaultLanguageId: number;
  organizerId: number;
  status: number;
  maxTickets: number;
  maxTicketsProOrder: number;
  countryId: number;
  openDoor: Date;
  start: Date;
  end: Date;
  eventGenreValue: number;
  googleCoordinates: string;
  isActiveForSale: boolean;
  googleAnalyticsTracker: string;
  hideOnEventList: boolean;
  hideEventInfoOnSoldOut: boolean;
  dateCreated: Date;
  dateModified: Date;
  zoneMapId: number;
  postSaleCloseStatus: number;
  masterEventId: number;
  organizerGoogleAnalyticsDomain: string;
  isCompanyNameMandatory: boolean;
  isPhoneMandatory: boolean;
  tenantId: number;
  locationId: number;
  noVatOnCommission: boolean;
  shippingFee: number;
  sendNotificationByEmail: boolean;
  notificationEmail: string;
  vatNumber: string;
  sendWarning: boolean;
  salesWarningLevel: number;
  warningSendDate: string;
  salesRegionId: number;
  emailTemplate: string;
  showLinkToGoogleMap: boolean;
  latitude: number;
  longitude: number;
  facebookPixelId: string;
  stay22Active: boolean;
  isBankInternalEvent: boolean;
  externalEventCode: string;
  forceEmptySeats: number;
  eventInfos: EventInfo[];
  ticketTypes: TicketType[];
}

export interface EventInfo {
  _id: number;
  organizerName: string | null;
  name: string;
  shortDescription: string;
  importantNotes: string;
  longDescription: string;
  artists: string;
  url: string;
  city: string;
  location: string;
  address: string;
  postalCode: string | null;
  bannerImagePath: string;
  flyerImagePath: string;
  bannerImage: string;
  flyerImage: string;
  languageId: number;
  languageIsoCode: string | null;
  googleMapLink: string;
  organizerRemark: string;
  posRemark: string;
}

export interface TicketType {
  _id: number;
  eventId: number;
  ticketsTotal: number;
  currency: string;
  price: number;
  start: Date;
  end: Date;
  vatTypeId: number;
  vatPercentage: number;
  maxMemberTickets: number;
  bookWithTicketTypeId: number;
  sortOrder: number;
  preSaleStart: Date;
  preSaleEnd: Date;
  openDoor: Date;
  invoiceEnd: Date;
  callcenterEnd: Date;
  sofortEnd: Date;
  promoCodeIdToPrint: number;
  ticketTemplate: string;
  maxNumberOfTicketsPerOrder: number;
  numberOfTicketsToBasket: number;
  festivalEventIds: string;
  hidePriceOnTicket: boolean;
  hideOnPcClient: boolean;
  generateNoTicket: boolean;
  ticketByEmail: boolean;
  hideReceipt: boolean;
  noConfirmationEmail: boolean;
  useWorkflow: boolean;
  companyRequired: boolean;
  companyMandatory: boolean;
  firstNameRequired: boolean;
  firstNameMandatory: boolean;
  nameRequired: boolean;
  nameMandatory: boolean;
  birthDateRequired: boolean;
  birthDateMandatory: boolean;
  addressRequired: boolean;
  postalCodeAndCityRequired: boolean;
  addressMandatory: boolean;
  postalCodeAndCityMandatory: boolean;
  emailRequired: boolean;
  emailMandatory: boolean;
  isActive: boolean;
  hideDateTime: boolean;
  isOverheadCalculateActive: boolean;
  numberOfTicketsSold: number;
  colorCode: string;
  isSoldOut: boolean;
  showImageOnTop: boolean;
  blockAutoMailer: boolean;
  dontShowInsurance: boolean;
  vatInGivenAmount: string;
  senderEmail: string;
  replyTo: string;
  emailTemplate: string;
  modifiedDate: Date;
  dateCreated: Date;
  hidePassbook: boolean;
  externalTicketCode: string;
  sendSMSOrder: boolean;
  phoneRequired: boolean;
  phoneMandatory: boolean;
  ticketTypeInfos: TicketTypeInfo[];
}

export interface TicketTypeInfo {
  _id: number;
  name: string;
  languageId: number;
  description: string;
  imageUrl: string;
  image: string;
  additionalFile: string;
  additionalFileUrl: string;
  alternateImageUrl: string;
  customtext1: string | null;
  customtext2: string | null;
  customtext3: string | null;
  customtext4: string | null;
  customtext1Mandatory: boolean;
  customtext2Mandatory: boolean;
  originalFileData: string;
  originalImageData: string;
  croppedImageData: string;
  ticketTypeId: number;
  presentation: string;
  deleted: boolean;
  emailSubject: string;
  senderName: string;
  modifiedDate: Date;
}